@page "/fetchdata"
@inject HttpClient Http
@inject ApiService apiService
@using AudioWebApp.Client.Services
@using System.Collections.ObjectModel
@using AudioWebApp.Client.Models

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (topics == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    @* <MudTable Items="forecasts" Hover="true" SortLabel="Sort By" Elevation="0"> *@
    @*     <HeaderContent> *@
    @*         <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x=>x.Date)">Date</MudTableSortLabel></MudTh> *@
    @*         <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureC)">Temp. (C)</MudTableSortLabel></MudTh> *@
    @*         <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureF)">Temp. (F)</MudTableSortLabel></MudTh> *@
    @*         <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.Summary!)">Summary</MudTableSortLabel></MudTh> *@
    @*     </HeaderContent> *@
    @*     <RowTemplate> *@
    @*         <MudTd DataLabel="Date">@context.Date</MudTd> *@
    @*         <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd> *@
    @*         <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd> *@
    @*         <MudTd DataLabel="Summary">@context.Summary</MudTd> *@
    @*     </RowTemplate> *@
    @*     <PagerContent> *@
    @*         <MudTablePager PageSizeOptions="new int[]{50, 100}" /> *@
    @*     </PagerContent> *@
    @* </MudTable> *@
    
    @* <MudTable Items="topics" Hover="true" SortLabel="Sort By" Elevation="0"> *@
    @*     <MudText></MudText> *@
    @* </MudTable> *@
}


@code {
    //private WeatherForecast[]? forecasts;

    private ObservableCollection<Series> topics;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        await apiService.LoadData();
        
        topics = apiService.Topics;
    }
}
